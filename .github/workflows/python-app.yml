name: AutoBuild-QQwebhook

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '​**​/*.md'
      - '​**​/*.txt'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10']
        include:
          - os: ubuntu-latest
            ext: ''
            build-deps: sudo apt-get install -y build-essential python3-dev
          - os: windows-latest
            ext: '.exe'
            build-deps: echo "Skipping system deps on Windows"
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: ${{ matrix.build-deps }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '​**​/requirements.txt'

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ​**​/__pycache__
        key: ${{ runner.os }}-pip-${{ hashFiles('​**​/requirements.txt') }}

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install cython==0.29.36

    - name: Install dependencies
      run: |
        pip install -r requirements.txt pyinstaller
        pip check

    - name: Clean workspace
      run: |
        rm -rf dist build __pycache__ 2>/dev/null || rmdir /s /q dist build __pycache__

    - name: Build executable
      run: |
        pyinstaller --onefile --name QQwebhook${{ matrix.ext }} main.py
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          chmod +x dist/QQwebhook.exe
        fi

    - name: Package artifacts
      run: |
        mkdir release
        
        # 跨平台文件处理
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          copy dist\\QQwebhook.exe release\\
        else
          cp dist/QQwebhook release/
        fi

        # 生成时间戳 (兼容Windows/Linux)
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        
        # 压缩打包
        cd release && zip -r ../QQwebhook-${{ matrix.os }}-$TIMESTAMP.zip ./*

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: QQwebhook-${{ matrix.os }}
        path: |
          QQwebhook-*.zip
        retention-days: 7

    # 安全扫描 (可选)
    - name: Dependency audit
      if: always()
      run: pip-audit --require-hashes -r requirements.txt
